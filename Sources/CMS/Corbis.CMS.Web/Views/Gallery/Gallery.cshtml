@using System.Drawing
@using Corbis.CMS.Web.Models
@using Corbis.CMS.Entity
@model GalleryModel
@{
    ViewBag.Title = "Edit Gallery";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var culture = System.Threading.Thread.CurrentThread.CurrentCulture;
}

@Html.Hidden("GalleryID", this.Model.ID.Value);
<h2>Edit Gallery</h2>

<style type="text/css" media="screen">
    object:focus
    {
        outline: none;
    }
    #flashContent
    {
        display: none;
    }
    body{ text-align: center;}
</style>

@Scripts.Render("~/Scripts/Corbis/Uploader.js")
@Scripts.Render("~/Scripts/Corbis/Corbis.Gallery.js")
@Scripts.Render("~/Scripts/Corbis/jquery.textaligment.js")

<script type="text/javascript">
    GalleryPageMngr.galleryID = @(this.Model.ID.Value);
    GalleryPageMngr.deleteContentImageURL = '@Url.Action("DeleteContentImage", "Gallery")';
    GalleryPageMngr.swapImageOrderURL = '@Url.Action("SwapImageOrder", "Gallery")';
    GalleryPageMngr.fontFamiliesURL = '@Url.Action("GetFontFamilies", "Gallery")';
    GalleryPageMngr.changeImageOrderUrl = '@Url.Action("ChangeImageOrder", "Gallery")';
</script>
<div class="globalToolbar">
    <ul>
        <li>
            @Html.ActionLink("Preview", "BuildGallery", "Gallery", new { id = this.Model.ID }, new { target = "_blank" })
        </li>
        <li>
            @Html.ActionLink("Download Gallery", "Download", "Gallery", new { id = this.Model.ID }, null)
        </li>
        <li>
            <a href="javascript:void(0)" onclick="ClearGalleryContent(@this.Model.ID, '@Url.Action("ClearGalleryContent", "Gallery")'); return false;">Clear content</a>
        </li>
        <li>
            <a href="javascript:void(0)" onclick="ExpandImagesAll(); return false;">Expand all</a>
        </li>
        <li>
            <a href="javascript:void(0)" onclick="CollapseImagesAll(); return false;">Collapse all</a>
        </li>
        <li>
            @Html.ActionLink("Unlock", "UnLockGallery", "Gallery", new { id = this.Model.ID }, null)
        </li>
        @if (this.Model.Status == CuratedGalleryStatuses.UnPublished) { 
        <li>
            <a href="javascript:void(0)" onclick="publishGallery(); return false;">Publish</a>
        </li>            
        }
    </ul>
</div>

@using (Ajax.BeginForm("SaveGalleryAttributes", "Gallery", new { id = this.Model.ID }, new AjaxOptions() { OnBegin = "onBeginMsAjaxRequest", OnComplete = "onCompleteMsAjaxRequest", OnSuccess = "onSaveGalleryAttributes" }, new { id = "galleryAttributesForm" }))
{
    @Html.ValidationSummary();
<div class="galleryGeneralAction">
    <input type="submit" value="Save" />
    <table>
        <tbody>
            <tr>
                <td>Gallery Name</td>
                <td>@Html.TextBoxFor(x => x.Name)</td>
            </tr>
            <tr>
                <td>Font Family</td>
                <td>
                    @Html.DropDownListFor(x => x.FontFamily, this.Model.FontFamilies.Select(x => new SelectListItem() { Text = x.Name, Value = x.GetName(culture.LCID), Selected = string.Equals(x.Name, this.Model.FontFamily, StringComparison.OrdinalIgnoreCase) }))
                </td>
            </tr>
            <tr>
                <td>Transitions</td>
                <td>
                    <label for="transitionsOff">Off</label>@Html.RadioButtonFor(x => x.TransitionsIncluded, false, new { id = "transitionsOff" })
                    <label for="transitionsOn">On</label>@Html.RadioButtonFor(x => x.TransitionsIncluded, true, new { id = "transitionsOn" })
                </td>
            </tr>
        </tbody>
    </table>                        
</div>
}
<div>
    <a href="javascript:void(0)" onclick="uploadGalleryImages(); return false;">Upload Images</a>
</div>
<div class="galleryContent">
    @if (this.Model.CoverImage != null)
    { 
        @Html.Partial("CoverImagePartial", this.Model.CoverImage)
    }
    @if (this.Model.ContentImages != null)
    {
        foreach (var image in this.Model.ContentImages)
        {
            @Html.Partial("ContentImagePartial", image);
        }
    }
</div>
<script type="text/javascript">
    function uploadMultipleImageCallback(result) {
        var onsuccess = function (data) {
            if (data.success === false) {
                alert(data.error);
                return;
            }
            $('div.galleryContent').append(data);
        }

        var data = jQuery.parseJSON(result);

        $.ajax({
            url: data.IsCover ? '@this.Url.Action("GetCoverImage", "Gallery")' : '@this.Url.Action("GetContentImage", "Gallery")',
            type: 'POST',
            data: data,
            success: onsuccess
        });

        return "OK";
    }
    function editImage(imageID, isCover) {
        showPopupWindow({
            popupID: 'editGalleryImage',
            title: 'Edit Image',
            url: '@Url.Action("EditImagePopup_GET", "Gallery")',
            params: { imageID: imageID, galleryID: '@this.Model.ID', isCover: isCover },
            onClosed: function () { swfobject.removeSWF('singleImageUploader'); } //TODO: it is hack. In the future it must be deleted and refactored
        });
    }
    function uploadGalleryImages() {
        var swfElementID = 'multipleImageUploader' + '@Guid.NewGuid().ToString("N")';
        showPopupWindow({
            jdialogOptions: { modal: true, height: 350, width: 750 },
            popupID: 'editGalleryImage',
            title: 'Upload Images',
            url: '@Url.Action("UploadMultipleImages", "Gallery")',
            params: { galleryID: '@this.Model.ID', swfElementID: swfElementID },
            onClosed: function () { swfobject.removeSWF(swfElementID); window.location = window.location; } //TODO: it is hack. In the future it must be deleted and refactored
        });
    }
    function publishGallery() {
        showPopupWindow({
            popupID: 'publishGalleryPopup',
            title: 'Publish Period',
            url: '@Url.Action("PublishPopup_GET", "Gallery")',
            params: { galleryID: '@this.Model.ID' },
            onLoaded: function () {
                GalleryPublicationPopup.onPublishSucceeded = function (result) {
                    window.location = '@Url.Action("Index", "Gallery", new { id = this.Model.ID })'; 
                };
            }
        });
    }
    function unPublishGallery() {
        $.ajax({
            url: '@this.Url.Action("UnPublish", "Gallery")',
            type: 'POST',
            data: { id: @this.Model.ID },
            success: function (result) {
                if (result.success == true) {
                    window.location = '@Url.Action("EditGallery", "Gallery", new { id = this.Model.ID })';
                }
            }
        });
    }
</script>
